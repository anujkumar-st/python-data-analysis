import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import plotly.io as pio
import plotly.colors as colors
pio.templates.default="plotly_white"
file="D:\\Downloads\\Sample - Superstore.csv"
data =pd.read_csv(file,encoding='latin-1')
print(data.head())
print(data.describe())
print(data.info())
#now changing the data type of ship date and order date into datetime
data['Order Date']=pd.to_datetime(data['Order Date'])
data['Ship Date']=pd.to_datetime(data['Ship Date'])

# Adding new columns for month,year and day of the week 
data['Order Month']=data['Order Date'].dt.month
data['Order Year']=data['Order Date'].dt.year
data['Order Day of Week']=data['Order Date'].dt.dayofweek
print(data.info())
#Monthly Sales Analysis
Sales_by_month =data.groupby('Order Month')['Sales'].sum().reset_index()
fig= px.line(Sales_by_month,
             x='Order Month',
             y='Sales',
             title='Monthly sales analysis')
fig.show()
#Sales analysis by category
Sales_by_category =data.groupby('Category')['Sales'].sum().reset_index()
fig2 =px.pie(Sales_by_category,
             values='Sales',
             names='Category',
             hole=0.4,
             color_discrete_map=px.colors.qualitative.Pastel,
             title="Sales analysis by category")
fig2.update_traces(textposition='inside', textinfo='percent+label')
fig2.show()
#Sales analysis by Sub Category
Sales_by_sub_category=data.groupby('Sub-Category')['Sales'].sum().reset_index()
fig3=px.bar(Sales_by_sub_category,
            x='Sub-Category',
            y='Sales',
            title="Sales Analysis by Sub-Category")
fig3.show()
#Monthly Profit Analysis
Profit_by_month =data.groupby('Order Month')['Profit'].sum().reset_index()
fig4=px.line(Profit_by_month,
                  x='Order Month',
                  y='Profit',
                  title="Monthly profit analysis")
fig4.show()
#Profit analysis by category
Profit_by_category =data.groupby('Category')['Profit'].sum().reset_index()
fig5=px.pie(Profit_by_category,
                  names='Category',
                  values='Profit',
                  title="Profit analysis by Category",
                  color_discrete_sequence=px.colors.qualitative.Pastel)
fig5.update_traces(textposition='inside', textinfo='percent+label')
fig5.show()
#Profit Analysis by Sub Category
profit_by_subcategory=data.groupby('Sub-Category')['Profit'].sum().reset_index()
fig6 = px.bar(profit_by_subcategory,
              x='Sub-Category',
              y="Profit",
              title="Profit analysis by Sub-Category")
fig6.show()
#Sales and profit Analysis by Customer Segment
sales_profit_by_segment = data.groupby('Segment').agg({'Sales': "sum",'Profit' :'sum'}).reset_index()
# print(sales_profit_by_segment)
color_palette = colors.qualitative.Pastel

fig7 = go.Figure()
fig7.add_trace(go.Bar(x=sales_profit_by_segment['Segment'], 
                     y=sales_profit_by_segment['Sales'], 
                     name='Sales',
                     marker_color=color_palette[0]))

fig7.add_trace(go.Bar(x=sales_profit_by_segment['Segment'], 
                     y=sales_profit_by_segment['Profit'], 
                     name='Profit',
                     marker_color=color_palette[1]))

fig7.update_layout(title='Sales and Profit Analysis by Customer Segment',
                  xaxis_title='Customer Segment', yaxis_title='Amount')

fig7.show()
#Analyse sales to profit ratio
sales_profit_by_segment['Sales_to_profit_ratio']=sales_profit_by_segment['Sales']/ sales_profit_by_segment['Profit']
print(sales_profit_by_segment[['Segment','Sales_to_profit_ratio']])


